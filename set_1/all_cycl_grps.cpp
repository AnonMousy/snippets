#include <iostream>
#include <algorithm>
#include <vector>
#include <set>

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef set<vi> svi;
typedef set<svi> ssvi;

ssvi all_cycl_grps(int n) {
    // all_cycl_grps(n) is the set of all cyclic
    // subgroups generated by P(n)
    vi v1;
    for (int i = 0; i < n; i++) v1.push_back(i + 1);
    
    vvi v2;
    do v2.push_back(v1);
    while (next_permutation(v1.begin(), v1.end()) != 0);
    ssvi s3;
    for (int i = 0; i < v2.size(); i++) {
        vi v1a = v2[i], v1b = v2[i];
        svi s2;
        s2.insert(v1a);
        
        while (1 == 1) {
            for (int j = 0; j < v2[i].size(); j++) v1a[j] = v1b[v2[i][j] - 1];
            v2[i] = v1a;
            if (v1a == *s2.begin())
                break;
            else s2.insert(v1a);
            }
        s3.insert(s2);
        }
    return s3;
    }

void print_svi(svi s1) {
    // print elements of s1
    int j = 1;
    for (auto t = s1.begin(); t != s1.end(); t++) {
        for (int i = 0; i < (*t).size(); i++)
            cout << (*t)[i] << ' ';
        cout << "   ";
        j++;
        }
    }

int main() {
    int j = 3;
    ssvi s3 = all_cycl_grps(j);
    int i = s3.size(), k = 1;
    
    cout << "There are " << i << " different cyclic"
         << " subgroups generated by elements of P(" << j << "):"
         << endl;
    for (auto t = s3.begin(); t != s3.end(); t++) {
        cout << k << ":   <    ";
        print_svi(*t);
        cout << ">" << endl << "----------------------" << endl;
        k++;
        }
    }
